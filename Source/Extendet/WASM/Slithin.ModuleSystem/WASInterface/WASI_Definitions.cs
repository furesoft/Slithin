namespace Slithin.ModuleSystem.WASInterface;

public static partial class WasiUnstable
{
    private const byte __WASI_ADVICE_DONTNEED = 4;
    private const byte __WASI_ADVICE_NOREUSE = 5;
    private const byte __WASI_ADVICE_NORMAL = 0;
    private const byte __WASI_ADVICE_RANDOM = 2;
    private const byte __WASI_ADVICE_SEQUENTIAL = 1;
    private const byte __WASI_ADVICE_WILLNEED = 3;
    private const uint __WASI_CLOCK_MONOTONIC = 1;
    private const uint __WASI_CLOCK_PROCESS_CPUTIME_ID = 2;
    private const uint __WASI_CLOCK_REALTIME = 0;
    private const uint __WASI_CLOCK_THREAD_CPUTIME_ID = 3;
    private const ulong __WASI_DIRCOOKIE_START = 0;
    private const ushort __WASI_E2BIG = 1;
    private const ushort __WASI_EACCES = 2;
    private const ushort __WASI_EADDRINUSE = 3;
    private const ushort __WASI_EADDRNOTAVAIL = 4;
    private const ushort __WASI_EAFNOSUPPORT = 5;
    private const ushort __WASI_EAGAIN = 6;
    private const ushort __WASI_EALREADY = 7;
    private const ushort __WASI_EBADF = 8;
    private const ushort __WASI_EBADMSG = 9;
    private const ushort __WASI_EBUSY = 10;
    private const ushort __WASI_ECANCELED = 11;
    private const ushort __WASI_ECHILD = 12;
    private const ushort __WASI_ECONNABORTED = 13;
    private const ushort __WASI_ECONNREFUSED = 14;
    private const ushort __WASI_ECONNRESET = 15;
    private const ushort __WASI_EDEADLK = 16;
    private const ushort __WASI_EDESTADDRREQ = 17;
    private const ushort __WASI_EDOM = 18;
    private const ushort __WASI_EDQUOT = 19;
    private const ushort __WASI_EEXIST = 20;
    private const ushort __WASI_EFAULT = 21;
    private const ushort __WASI_EFBIG = 22;
    private const ushort __WASI_EHOSTUNREACH = 23;
    private const ushort __WASI_EIDRM = 24;
    private const ushort __WASI_EILSEQ = 25;
    private const ushort __WASI_EINPROGRESS = 26;
    private const ushort __WASI_EINTR = 27;
    private const ushort __WASI_EINVAL = 28;
    private const ushort __WASI_EIO = 29;
    private const ushort __WASI_EISCONN = 30;
    private const ushort __WASI_EISDIR = 31;
    private const ushort __WASI_ELOOP = 32;
    private const ushort __WASI_EMFILE = 33;
    private const ushort __WASI_EMLINK = 34;
    private const ushort __WASI_EMSGSIZE = 35;
    private const ushort __WASI_EMULTIHOP = 36;
    private const ushort __WASI_ENAMETOOLONG = 37;
    private const ushort __WASI_ENETDOWN = 38;
    private const ushort __WASI_ENETRESET = 39;
    private const ushort __WASI_ENETUNREACH = 40;
    private const ushort __WASI_ENFILE = 41;
    private const ushort __WASI_ENOBUFS = 42;
    private const ushort __WASI_ENODEV = 43;
    private const ushort __WASI_ENOENT = 44;
    private const ushort __WASI_ENOEXEC = 45;
    private const ushort __WASI_ENOLCK = 46;
    private const ushort __WASI_ENOLINK = 47;
    private const ushort __WASI_ENOMEM = 48;
    private const ushort __WASI_ENOMSG = 49;
    private const ushort __WASI_ENOPROTOOPT = 50;
    private const ushort __WASI_ENOSPC = 51;
    private const ushort __WASI_ENOSYS = 52;
    private const ushort __WASI_ENOTCAPABLE = 76;
    private const ushort __WASI_ENOTCONN = 53;
    private const ushort __WASI_ENOTDIR = 54;
    private const ushort __WASI_ENOTEMPTY = 55;
    private const ushort __WASI_ENOTRECOVERABLE = 56;
    private const ushort __WASI_ENOTSOCK = 57;
    private const ushort __WASI_ENOTSUP = 58;
    private const ushort __WASI_ENOTTY = 59;
    private const ushort __WASI_ENXIO = 60;
    private const ushort __WASI_EOVERFLOW = 61;
    private const ushort __WASI_EOWNERDEAD = 62;
    private const ushort __WASI_EPERM = 63;
    private const ushort __WASI_EPIPE = 64;
    private const ushort __WASI_EPROTO = 65;
    private const ushort __WASI_EPROTONOSUPPORT = 66;
    private const ushort __WASI_EPROTOTYPE = 67;
    private const ushort __WASI_ERANGE = 68;
    private const ushort __WASI_EROFS = 69;
    private const ushort __WASI_ESPIPE = 70;
    private const ushort __WASI_ESRCH = 71;
    private const ushort __WASI_ESTALE = 72;
    private const ushort __WASI_ESUCCESS = 0;
    private const ushort __WASI_ETIMEDOUT = 73;
    private const ushort __WASI_ETXTBSY = 74;
    private const ushort __WASI_EVENT_FD_READWRITE_HANGUP = 0x0001;
    private const byte __WASI_EVENTTYPE_CLOCK = 0;
    private const byte __WASI_EVENTTYPE_FD_READ = 1;
    private const byte __WASI_EVENTTYPE_FD_WRITE = 2;
    private const ushort __WASI_EXDEV = 75;
    private const ushort __WASI_FDFLAG_APPEND = 0x0001;
    private const ushort __WASI_FDFLAG_DSYNC = 0x0002;
    private const ushort __WASI_FDFLAG_NONBLOCK = 0x0004;
    private const ushort __WASI_FDFLAG_RSYNC = 0x0008;
    private const ushort __WASI_FDFLAG_SYNC = 0x0010;
    private const ushort __WASI_FILESTAT_SET_ATIM = 0x0001;
    private const ushort __WASI_FILESTAT_SET_ATIM_NOW = 0x0002;
    private const ushort __WASI_FILESTAT_SET_MTIM = 0x0004;
    private const ushort __WASI_FILESTAT_SET_MTIM_NOW = 0x0008;
    private const byte __WASI_FILETYPE_BLOCK_DEVICE = 1;
    private const byte __WASI_FILETYPE_CHARACTER_DEVICE = 2;
    private const byte __WASI_FILETYPE_DIRECTORY = 3;
    private const byte __WASI_FILETYPE_REGULAR_FILE = 4;
    private const byte __WASI_FILETYPE_SOCKET_DGRAM = 5;
    private const byte __WASI_FILETYPE_SOCKET_STREAM = 6;
    private const byte __WASI_FILETYPE_SYMBOLIC_LINK = 7;
    private const byte __WASI_FILETYPE_UNKNOWN = 0;
    private const uint __WASI_LOOKUP_SYMLINK_FOLLOW = 0x00000001;
    private const ushort __WASI_O_CREAT = 0x0001;
    private const ushort __WASI_O_DIRECTORY = 0x0002;
    private const ushort __WASI_O_EXCL = 0x0004;
    private const ushort __WASI_O_TRUNC = 0x0008;
    private const byte __WASI_PREOPENTYPE_DIR = 0;
    private const ulong __WASI_RIGHT_FD_ADVISE = 0x0000000000000080;
    private const ulong __WASI_RIGHT_FD_ALLOCATE = 0x0000000000000100;
    private const ulong __WASI_RIGHT_FD_DATASYNC = 0x0000000000000001;
    private const ulong __WASI_RIGHT_FD_FDSTAT_SET_FLAGS = 0x0000000000000008;
    private const ulong __WASI_RIGHT_FD_FILESTAT_GET = 0x0000000000200000;
    private const ulong __WASI_RIGHT_FD_FILESTAT_SET_SIZE = 0x0000000000400000;
    private const ulong __WASI_RIGHT_FD_FILESTAT_SET_TIMES = 0x0000000000800000;
    private const ulong __WASI_RIGHT_FD_READ = 0x0000000000000002;
    private const ulong __WASI_RIGHT_FD_READDIR = 0x0000000000004000;
    private const ulong __WASI_RIGHT_FD_SEEK = 0x0000000000000004;
    private const ulong __WASI_RIGHT_FD_SYNC = 0x0000000000000010;
    private const ulong __WASI_RIGHT_FD_TELL = 0x0000000000000020;
    private const ulong __WASI_RIGHT_FD_WRITE = 0x0000000000000040;
    private const ulong __WASI_RIGHT_PATH_CREATE_DIRECTORY = 0x0000000000000200;
    private const ulong __WASI_RIGHT_PATH_CREATE_FILE = 0x0000000000000400;
    private const ulong __WASI_RIGHT_PATH_FILESTAT_GET = 0x0000000000040000;
    private const ulong __WASI_RIGHT_PATH_FILESTAT_SET_SIZE = 0x0000000000080000;
    private const ulong __WASI_RIGHT_PATH_FILESTAT_SET_TIMES = 0x0000000000100000;
    private const ulong __WASI_RIGHT_PATH_LINK_SOURCE = 0x0000000000000800;
    private const ulong __WASI_RIGHT_PATH_LINK_TARGET = 0x0000000000001000;
    private const ulong __WASI_RIGHT_PATH_OPEN = 0x0000000000002000;
    private const ulong __WASI_RIGHT_PATH_READLINK = 0x0000000000008000;
    private const ulong __WASI_RIGHT_PATH_REMOVE_DIRECTORY = 0x0000000002000000;
    private const ulong __WASI_RIGHT_PATH_RENAME_SOURCE = 0x0000000000010000;
    private const ulong __WASI_RIGHT_PATH_RENAME_TARGET = 0x0000000000020000;
    private const ulong __WASI_RIGHT_PATH_SYMLINK = 0x0000000001000000;
    private const ulong __WASI_RIGHT_PATH_UNLINK_FILE = 0x0000000004000000;
    private const ulong __WASI_RIGHT_POLL_FD_READWRITE = 0x0000000008000000;
    private const ulong __WASI_RIGHT_SOCK_SHUTDOWN = 0x0000000010000000;
    private const byte __WASI_SHUT_RD = 0x01;
    private const byte __WASI_SHUT_WR = 0x02;
    private const byte __WASI_SIGABRT = 6;
    private const byte __WASI_SIGALRM = 14;
    private const byte __WASI_SIGBUS = 7;
    private const byte __WASI_SIGCHLD = 16;
    private const byte __WASI_SIGCONT = 17;
    private const byte __WASI_SIGFPE = 8;
    private const byte __WASI_SIGHUP = 1;
    private const byte __WASI_SIGILL = 4;
    private const byte __WASI_SIGINT = 2;
    private const byte __WASI_SIGKILL = 9;
    private const byte __WASI_SIGPIPE = 13;
    private const byte __WASI_SIGPOLL = 28;
    private const byte __WASI_SIGPROF = 26;
    private const byte __WASI_SIGPWR = 29;
    private const byte __WASI_SIGQUIT = 3;
    private const byte __WASI_SIGSEGV = 11;
    private const byte __WASI_SIGSTOP = 18;
    private const byte __WASI_SIGSYS = 30;
    private const byte __WASI_SIGTERM = 15;
    private const byte __WASI_SIGTRAP = 5;
    private const byte __WASI_SIGTSTP = 19;
    private const byte __WASI_SIGTTIN = 20;
    private const byte __WASI_SIGTTOU = 21;
    private const byte __WASI_SIGURG = 22;
    private const byte __WASI_SIGUSR1 = 10;
    private const byte __WASI_SIGUSR2 = 12;
    private const byte __WASI_SIGVTALRM = 25;
    private const byte __WASI_SIGWINCH = 27;
    private const byte __WASI_SIGXCPU = 23;
    private const byte __WASI_SIGXFSZ = 24;
    private const ushort __WASI_SOCK_RECV_DATA_TRUNCATED = 0x0001;
    private const ushort __WASI_SOCK_RECV_PEEK = 0x0001;
    private const ushort __WASI_SOCK_RECV_WAITALL = 0x0002;
    private const ushort __WASI_SUBSCRIPTION_CLOCK_ABSTIME = 0x0001;
    private const byte __WASI_WHENCE_CUR = 0;
    private const byte __WASI_WHENCE_END = 1;
    private const byte __WASI_WHENCE_SET = 2;
}