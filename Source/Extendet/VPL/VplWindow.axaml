<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:idd="clr-namespace:Avalonia.Xaml.Interactions.DragAndDrop;assembly=Avalonia.Xaml.Interactions"
        xmlns:paz="clr-namespace:Avalonia.Controls.PanAndZoom;assembly=Avalonia.Controls.PanAndZoom"
        xmlns:behaviors="clr-namespace:NodeEditor.Behaviors;assembly=NodeEditorAvalonia"
        xmlns:m="clr-namespace:NodeEditor.Model;assembly=NodeEditorAvalonia.Model"
        xmlns:core="using:Slithin.Core"
        xmlns:ui="using:Slithin.UI"
        xmlns:controls="using:Slithin.Controls"
        xmlns:s="using:Slithin.Styles"
        xmlns:editor="clr-namespace:NodeEditor.Controls;assembly=NodeEditorAvalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450" MinWidth="1105" MinHeight="450" WindowStartupLocation="CenterScreen"
        x:Class="Slithin.VPL.VplWindow" Icon="avares:/Resources/Icon.png" editor:DrawingNode.IsEditMode="{Binding IsEditMode, Mode=TwoWay}"
        Title="Visual Programming">
    <Window.KeyBindings>
        <KeyBinding Command="{Binding SaveCommand}" Gesture="Ctrl+S" />
        <KeyBinding Command="{Binding Drawing.CutCommand, FallbackValue={x:Null}}" Gesture="Ctrl+X" />
        <KeyBinding Command="{Binding Drawing.CopyCommand, FallbackValue={x:Null}}" Gesture="Ctrl+C" />
        <KeyBinding Command="{Binding Drawing.PasteCommand, FallbackValue={x:Null}}" Gesture="Ctrl+V" />
        <KeyBinding Command="{Binding Drawing.DuplicateCommand, FallbackValue={x:Null}}" Gesture="Ctrl+D" />
        <KeyBinding Command="{Binding Drawing.DeleteCommand, FallbackValue={x:Null}}" Gesture="Delete" />
        <KeyBinding Command="{Binding Drawing.SelectAllCommand, FallbackValue={x:Null}}" Gesture="Ctrl+A" />
        <KeyBinding Command="{Binding Drawing.DeselectAllCommand, FallbackValue={x:Null}}" Gesture="Escape" />
    </Window.KeyBindings>

    <Grid ColumnDefinitions="230,6,*">
        <DockPanel Background="{DynamicResource PanelBackground}" Grid.Column="0">
            <TabControl Items="{Binding Categories}" TabStripPlacement="Left" />
        </DockPanel>

        <GridSplitter ResizeDirection="Columns"
                      ResizeBehavior="PreviousAndNext"
                      Width="6"
                      Background="Transparent"
                      Grid.Column="1" />
        <Panel Grid.Column="2">
            <Panel Background="LightGray" />
            <Panel Background="White" />
            <ScrollViewer VerticalScrollBarVisibility="Auto"
          HorizontalScrollBarVisibility="Auto"
          DataContext="{Binding Drawing}">
                <ui:NodeZoomBorder Name="ZoomBorder"
                                         Stretch="None"
                                         ZoomSpeed="1.2"
                                         EnableConstrains="False"
                                         Background="White"
                                         ClipToBounds="True"
                                         Focusable="True"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch">
                    <i:Interaction.Behaviors>
                        <idd:ContextDropBehavior Context="{Binding FallbackValue={x:Null}}">
                            <idd:ContextDropBehavior.Handler>
                                <behaviors:DrawingDropHandler RelativeTo="{Binding #Drawing}" />
                            </idd:ContextDropBehavior.Handler>
                        </idd:ContextDropBehavior>
                    </i:Interaction.Behaviors>
                    <editor:DrawingNode Name="Drawing"
                                        Background="{DynamicResource EditorCheckerBoard}" Width="10000" Height="7500">

                        <editor:DrawingNode.ContextFlyout>
                            <MenuFlyout>
                                <MenuItem Header="_Edit"
                                          InputGesture="Ctrl+E"
                                          DataContext="{Binding $parent[UserControl].DataContext}"
                                          Command="{Binding ToggleEditModeCommand}">
                                    <MenuItem.Icon>
                                        <CheckBox BorderThickness="0"
                                                  IsHitTestVisible="False"
                                                  IsChecked="{Binding IsEditMode, Mode=TwoWay}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="-" />
                                <MenuItem Header="Cu_t" Command="{Binding CutCommand}" InputGesture="Ctrl+X" />
                                <MenuItem Header="_Copy" Command="{Binding CopyCommand}" InputGesture="Ctrl+C" />
                                <MenuItem Header="_Paste" Command="{Binding PasteCommand}" InputGesture="Ctrl+V" />
                                <MenuItem Header="D_uplicate" Command="{Binding DuplicateCommand}" InputGesture="Ctrl+D" />
                                <MenuItem Header="-" />
                                <MenuItem Header="Select _All" Command="{Binding SelectAllCommand, FallbackValue={x:Null}}" InputGesture="Ctrl+A" />
                                <MenuItem Header="De_select All" Command="{Binding DeselectAllCommand, FallbackValue={x:Null}}" InputGesture="Escape" />
                                <MenuItem Header="-" />
                                <MenuItem Header="_Delete" Command="{Binding DeleteCommand}" InputGesture="Delete" />
                            </MenuFlyout>
                        </editor:DrawingNode.ContextFlyout>
                    </editor:DrawingNode>
                </ui:NodeZoomBorder>
            </ScrollViewer>
        </Panel>
    </Grid>
</Window>